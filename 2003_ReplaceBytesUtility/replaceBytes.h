///////////////////////////////////////////////////
// Project: ReplaceIt ( RI )
// File:    replaceBytes.h
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#ifndef ___REPLACEBYTES_H___
#define ___REPLACEBYTES_H___
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#include <vector>
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#include "replace.h"
///////////////////////////////////////////////////

///////////////////////////////////////////////////
class ReplaceBytes : public Replace
{
public:
	
	///////////////////////////////////////////////
	// Constructor(s)
	ReplaceBytes( );
	ReplaceBytes( file_t inS, file_t inD );

	///////////////////////////////////////////////
	// Destructor(s)
	virtual ~ReplaceBytes( );

	///////////////////////////////////////////////
	// Public Modifier(s)
	virtual void loadDataFile( );
	virtual void replaceKeywords( );
	virtual void outputResults( );

	///////////////////////////////////////////////
	// Public Accessor(s)
	line_t dataLines( uint_t elemNum ) const;

	///////////////////////////////////////////////
	// Public Attribute(s)

private:

	///////////////////////////////////////////////
	// Private Modifier(s)

	///////////////////////////////////////////////
	// Private Accessor(s)
	void displayDataLines( ) const;

	///////////////////////////////////////////////
	// Private Attribute(s)
	std::vector <line_t*>* my_lines;

}; // end of class ReplaceBytes
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#endif
///////////////////////////////////////////////////