///////////////////////////////////////////////////
// Project: ReplaceIt ( RI )
// File:    replace.h
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#ifndef ___REPLACE_H___
#define ___REPLACE_H___
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#include "typedefs.h"
///////////////////////////////////////////////////

///////////////////////////////////////////////////
class Replace
{
public:
	
	///////////////////////////////////////////////
	// Constructor(s)
	Replace( );
	Replace( file_t inS, file_t inD, inputMode_t inM );

	///////////////////////////////////////////////
	// Destructor(s)
	virtual ~Replace( );

	///////////////////////////////////////////////
	// Public Modifier(s)
	virtual void loadDataFile( ) = 0;
	virtual void replaceKeywords( ) = 0;
	virtual void outputResults( ) = 0;

	///////////////////////////////////////////////
	// Public Accessor(s)
	file_t templateFile( ) const;
	file_t sourceFile( ) const;
	file_t destFile( ) const;

	///////////////////////////////////////////////
	// Public Attribute(s)

protected:

	///////////////////////////////////////////////
	// Protected Modifier(s)

	///////////////////////////////////////////////
	// Protected Accessor(s)
	void clearScreen( ) const;
	void displayIntro( ) const;
	void completedStatus( ) const;

	///////////////////////////////////////////////
	// Protected Attribute(s)

private:

	///////////////////////////////////////////////
	// Private Modifier(s)

	///////////////////////////////////////////////
	// Private Accessor(s)
	inputMode_t mode( ) const;

	///////////////////////////////////////////////
	// Private Attribute(s)
	file_t my_templateFile;
	file_t my_sourceFile;
	file_t my_destFile;
	
	inputMode_t my_mode;

}; // end of class Replace
///////////////////////////////////////////////////

///////////////////////////////////////////////////
#endif
///////////////////////////////////////////////////